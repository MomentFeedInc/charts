image:
  repository: jetty
  tag: latest

replicaCount: 2

app:
  extraArgs: []
  maxUnavailable: 1
  podAnnotations: {}
  # jmxPort: 9999
  secretsChecksum: ""

  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # Ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#probe-v1-core

  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15

  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15

  # Ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  # Ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#resourcerequirements-v1-core

  resources:
    requests:
      cpu: 0.100
      memory: 256Mi
    limits:
      cpu: 2
      memory: 1Gi

# Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/

hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilization: 80

# Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/

ingress:
  enabled: false
  alb:
    enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  hosts: []

service:
  annotations: {}
  port: 8080

datadog:
  enabled: true
